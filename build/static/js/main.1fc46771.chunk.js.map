{"version":3,"sources":["reducers/blog.js","reducers/article.js","stores/index.js","actions/types.js","config/environment.js","config/blogApi.js","components/organisms/Navbar/Navbar.js","components/organisms/Body/Body.js","components/organisms/Layout/index.js","components/molecules/Card/Card.js","components/molecules/Card/Cover.js","components/molecules/Card/Body.js","components/molecules/Card/Footer.js","components/organisms/Card/ArticlesCard.js","views/Home.js","actions/getArticles.js","views/Article.js","config/router.js","views/error/404.js","App.js","serviceWorker.js","index.js"],"names":["initState","isFetch","data","combinedReducers","combineReducers","blog","state","action","type","console","log","length","concat","article","stores","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","baseUrl","instance","axios","create","baseURL","props","class","role","aria-label","href","src","alt","Body","className","children","Navbar","Card","Cover","coverUrl","undefined","cover","url","Footer","datetime","ArticlesCard","map","id","to","key","title","moment","created_at","format","connect","articles","dispatch","dispatchArticles","a","get","res","removeArticles","getArticles","useEffect","Layout","path","exact","component","Home","dispatchArticle","getArticleByIdFromNetWork","removeArticle","useParams","useState","setCoverUrl","getArticle","style","fontSize","height","content","NotFound","App","store","routes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fc46771.chunk.js","sourcesContent":["import {\n    FETCH_BLOG_DATA,\n    REMOVE_ARTICLES\n} from '../actions/types';\nconst initState = {\n    isFetch : false,\n    data : []\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case FETCH_BLOG_DATA:\n            console.log(action.data);\n            const isFetch = state.data.length > 0 ? true : false;\n            return {\n                isFetch,\n                data : state.data.concat(action.data)\n            }\n        case REMOVE_ARTICLES:\n            return initState\n        default:\n            return state;\n    }\n}","import {\n    GET_ARTICLE_BY_ID,\n    REMOVE_ARTICLE_STATE\n} from '../actions/types';\nconst initState = {\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case GET_ARTICLE_BY_ID:\n            return {...action.data};\n        case REMOVE_ARTICLE_STATE :\n            return initState;\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport blogReducer from '../reducers/blog';\nimport articleReducer from '../reducers/article';\n\nconst combinedReducers = combineReducers({\n    blog : blogReducer,\n    article : articleReducer\n});\n\nconst stores = createStore(\n    combinedReducers, \n    compose(\n        applyMiddleware(thunk),\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\n    )\n);\n\nexport default stores;","export const FETCH_BLOG_DATA = 'FETCH_BLOG_DATA';\nexport const REMOVE_ARTICLES = 'REMOVE_ARTICLES';\nexport const GET_ARTICLE_BY_ID = 'GET_ARTICLE_BY_ID';\nexport const REMOVE_ARTICLE_STATE = 'REMOVE_ARTICLE_STATE';","export const baseUrl = 'https://blog-backend-260901.appspot.com/';","import {baseUrl} from './environment';\nimport axios from 'axios';\n\nconst instance = axios.create({\n    baseURL : baseUrl\n});\n\nexport default instance;","import React from 'react';\nexport default (props) => {\n    return (\n        <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div class=\"navbar-brand\">\n                <a class=\"navbar-item\" href=\"/\">\n                    <img src=\"/logo.svg\" alt=\"Bulma: Free, open source, and modern CSS framework based on Flexbox\"/>\n                </a>\n            </div>\n        </nav>\n    );\n}","import React from 'react';\nexport default function Body(props){\n    return (\n        <body>\n            <section className=\"section\">\n                {props.children}\n            </section>\n        </body>\n    );\n}","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport Body from '../Body/Body';\nexport default (props) => {\n    return (\n        <div>\n            <Navbar/>\n            <div className=\"container\">\n                <Body>\n                    {props.children}\n                </Body>\n            </div>\n        </div>        \n    );\n}","import React from 'react';\n\nexport default function Card(props){\n    return(\n        <div className=\"card\">\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport { baseUrl } from '../../../config/environment';\n\nfunction Cover(props){\n    const coverUrl = props.cover != undefined ? `${baseUrl}${props.cover.url}` : \"https://bulma.io/images/placeholders/1280x960.png\";\n    return (\n        <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n                <img src={coverUrl} alt={\"Cover\"}/>\n            </figure>\n        </div>\n    )\n}\n\nexport default Cover;","import React from 'react';\n\nfunction Body(props){\n    return (\n        <div className=\"content\">\n            {props.children}\n            <br/>\n        </div>\n    );\n}\n\nexport default Body;","import React from 'react';\n\nfunction Footer(props){\n    return (\n        <div className=\"media\">\n            <small>\n                <div datetime=\"2016-1-1\">{props.children}</div>\n            </small>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom';\n\nimport Card from '../../molecules/Card/Card';\nimport Cover from '../../molecules/Card/Cover';\nimport Body from '../../molecules/Card/Body';\nimport Footer from '../../molecules/Card/Footer';\nfunction ArticlesCard(props){\n    return (\n        props.data.map((data, id) => {\n            const url = `/article/${data.id}`;\n            return (\n                <Link to={url} className=\"column is-3\" key={data.id}>\n                    <Card>\n                        <Cover cover={data.cover}/>\n                        <div className=\"card-content\">\n                            <Body>\n                                {data.title}\n                            </Body>\n                            <Footer>\n                                {moment(data.created_at).format('D MMMM Y H:m')}\n                            </Footer>\n                        </div>\n                    </Card>\n                </Link>\n            )\n        })\n    );\n}\nexport default ArticlesCard;","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getArticlesFromNetwork,\n    removeArticles,\n} from '../actions/getArticles';\n\nimport Layout from '../components/organisms/Layout';\nimport ArticlesCard from '../components/organisms/Card/ArticlesCard';\n\nfunction Home(props){\n    const getArticles = async () => {\n        await props.dispatchArticles()\n    }\n    useEffect( () => {\n        props.removeArticles();\n        getArticles();\n    }, []);\n\n    return (\n        <Layout>\n            <div className=\"container\">\n                <div className=\"columns is-multiline\">\n                    <ArticlesCard data={props.articles.blog.data}/>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nconst mapPropsToState = (state) => {\n    return {\n        articles : state\n    }\n}\n\nconst mapDispatchToState = dispatch => {\n    return {\n        dispatchArticles : () => dispatch(getArticlesFromNetwork()),\n        removeArticles : () => dispatch(removeArticles()),\n    };\n}\n\nexport default connect(mapPropsToState, mapDispatchToState)(Home);","import {\n    FETCH_BLOG_DATA,\n    GET_ARTICLE_BY_ID,\n    REMOVE_ARTICLE_STATE,\n    REMOVE_ARTICLES\n} from './types';\nimport axios from '../config/blogApi';\n\nconst getArticles = (data) => {\n    return {\n        type : FETCH_BLOG_DATA,\n        data : data\n    }\n}\n\n\nexport const getArticlesFromNetwork = () => {\n    return async (dispatch) => {\n        let res = await axios.get(\n            'contents'\n        );\n        console.log(res);\n        dispatch(getArticles(res.data));\n    }\n}\n\nexport const removeArticles = () => {\n    return {\n        type : REMOVE_ARTICLES\n    }\n}\n\nconst getArticleById = (data) => {\n    return {\n        type : GET_ARTICLE_BY_ID,\n        data : data\n    }\n}\n\nexport const getArticleByIdFromNetWork = (id) => {\n    return async (dispatch) => {\n        let res = await axios.get(\n            `contents/${id}`\n        );\n        dispatch(getArticleById(res.data));\n    }\n}\n\nexport const removeArticle = () => {\n    return {\n        type : REMOVE_ARTICLE_STATE\n    }\n}","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useParams} from 'react-router-dom';\n\nimport {baseUrl} from '../config/environment';\n\nimport Cover from '../components/molecules/Card/Cover';\nimport Layout from '../components/organisms/Layout';\n\nimport {\n    getArticleByIdFromNetWork,\n    removeArticle\n} from '../actions/getArticles';\nimport moment from 'moment';\n\nfunction Article(props){\n    let {id} = useParams();\n    let [coverUrl, setCoverUrl] = useState('');\n    const getArticle = async () => {\n        await props.dispatchArticle(id);\n    }\n    useEffect(() => {\n        props.removeArticle();\n        getArticle();\n    }, []);\n\n    useEffect(() => {\n        if(props.article.article.cover){\n            setCoverUrl(`${baseUrl}${props.article.article.cover.url}`);\n        }\n    })\n\n    return (\n        <Layout>\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title is-1\">{props.article.article.title}</h1>\n                        <div className=\"subtitle\" style={{fontSize: '10pt'}}>\n                            <p>{moment(props.article.article.created_at).format(\"MMMM D YYYY H:mm\")}</p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        {\n                            coverUrl === '' ? \n                            '' : \n                            <figure className=\"image is-4by3\">\n                                <img src={coverUrl} height={256} alt={\"Cover\"}/>\n                            </figure>\n                        }\n                    </div>\n                </div>\n            </section>\n            <section>\n                <div className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <p>{props.article.article.content}</p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    );\n};\n\nconst mapPropsToState = (state) => {\n    return {\n        article : state\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        dispatchArticle : (id) => dispatch(getArticleByIdFromNetWork(id)),\n        removeArticle : () => dispatch(removeArticle())\n    }\n}\n\nexport default connect(mapPropsToState, mapDispatchToState)(Article);","import Home from '../views/Home';\nimport Article from '../views/Article';\n\nexport default [{\n    path : '/',\n    exact: true,\n    component : Home\n}, {\n    path : '/article/:id',\n    exact: true,\n    component : Article\n}];","import React from 'react';\n\nexport default function NotFound(props){\n    return (\n        <div>\n            404\n        </div>\n    );\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\n\nimport store from './stores';\nimport routes from './config/router';\nimport NotFound from './views/error/404';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          {\n            routes.map(data => {\n              return (\n                <Route path={data.path} exact={data.exact} component={data.component}/>\n              )\n            })\n          }\n          <Route path=\"*\" exact={true} component={NotFound}/>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}