{"version":3,"sources":["reducers/blog.js","reducers/article.js","reducers/category.js","stores/index.js","actions/types.js","config/environment.js","config/blogApi.js","components/organisms/Navbar/Navbar.js","components/organisms/Body/Body.js","components/organisms/Layout/index.js","components/molecules/Card/Card.js","components/molecules/Card/Cover.js","components/molecules/Card/Body.js","components/molecules/Card/Footer.js","components/organisms/Card/ArticlesCard.js","views/Home.js","actions/getArticles.js","actions/getCategories.js","views/Portofolio.js","config/router.js","views/Article.js","views/error/404.js","App.js","serviceWorker.js","index.js"],"names":["initState","isFetch","data","combinedReducers","combineReducers","blog","state","action","type","console","log","length","concat","article","category","map","index","push","id","name","stores","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","baseUrl","instance","axios","create","baseURL","props","isFullPage","full","position","style","class","role","aria-label","href","src","alt","width","height","styles","pageWrapId","outerContainerId","noOverlay","right","className","bmBurgerButton","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","bmMorphShape","fill","bmOverlay","bmItem","Body","children","isFullScreen","fullScreenLayout","Navbar","notFullScreen","Card","Cover","coverUrl","undefined","cover","url","Footer","datetime","ArticlesCard","to","key","title","moment","created_at","format","connect","articles","dispatch","dispatchArticles","a","get","res","dispatchCategory","dispatchArticlesByCategory","categoryId","getArticleByCategoryFromNetwork","removeArticles","removeCategories","useState","setCategory","getArticles","getCategories","useEffect","setActiveCategory","Layout","overflowY","onClick","Portofolio","path","exact","component","dispatchArticle","getArticleByIdFromNetWork","removeArticle","useParams","setCoverUrl","getArticle","fontSize","content","Home","NotFound","App","store","routes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kPAKMA,EAAY,CACdC,SAAU,EACVC,KAAO,I,ikBCHX,IAAMF,EAAY,GCCZA,EAAY,GCEZG,EAAmBC,YAAgB,CACrCC,KHEW,WAAgC,IAA/BC,EAA8B,uDAAtBN,EAAWO,EAAW,uCAE1C,OAAQA,EAAOC,MACX,IIbuB,kBJgBnB,OAFAC,QAAQC,IAAIH,EAAOL,MAEZ,CACHD,QAFMK,EAAMJ,KAAKS,OAAS,EAG1BT,KAAOI,EAAMJ,KAAKU,OAAOL,EAAOL,OAExC,IInBuB,kBJoBnB,OAAOF,EACX,IIlB+B,0BJoB3B,MAAO,CACHC,QAFMK,EAAMJ,KAAKS,OAAS,EAG1BT,KAAOI,EAAMJ,KAAKU,OAAOL,EAAOL,OAExC,QACI,OAAOI,IGpBfO,QFFW,WAAgC,IAA/BP,EAA8B,uDAAtBN,EAAWO,EAAW,uCAC1C,OAAQA,EAAOC,MACX,IGPyB,oBHQrB,OAAO,EAAP,GAAWD,EAAOL,MACtB,IGR4B,uBHSxB,OAAOF,EACX,QACI,OAAOM,IEJfQ,SDJW,WAAgC,IAA/BR,EAA8B,uDAAtBN,EAAWO,EAAW,uCAC1C,OAAQA,EAAOC,MACX,IED6B,wBFEzB,IAAMM,EAAW,GAOjB,OANAP,EAAOL,KAAKa,KAAK,SAACb,EAAMc,GACpBF,EAASG,KAAK,CACVC,GAAKhB,EAAKgB,GACVC,KAAOjB,EAAKiB,UAGbL,EACX,IETyB,oBFUrB,OAAOd,EACX,QACI,OAAOM,MCCJc,EARAC,YACXlB,EACAmB,YACIC,YAAgBC,KACfC,OAAOC,sCAAwCD,OAAOC,wCAA2CJ,M,+BEjB7FK,EAAU,2C,QCORC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAUJ,I,QCFC,WAACK,GACZ,IAAMC,GAA4B,IAAfD,EAAME,KAAgB,CAACC,SAAU,YAAc,GAClE,OACI,yBAAKC,MAAOH,GACR,yBAAKI,MAAM,SAASC,KAAK,aAAaC,aAAW,mBAC7C,yBAAKF,MAAM,gBACP,uBAAGA,MAAM,cAAcG,KAAK,KACxB,yBAAKC,IAAI,YAAYC,IAAI,eAAeC,MAAM,KAAKC,OAAO,QAG9D,8BACI,kBAAC,QAAD,CAAMC,OAAQA,EAAQC,WAAY,YAAaC,iBAAmB,kBAAoBC,WAAS,EAACC,OAAK,GACjG,6BAAS/B,GAAG,YAAYgC,UAAU,WAC9B,yBAAKA,UAAU,QACX,wBAAIA,UAAU,aACV,4BAAI,uBAAGhC,GAAG,OAAOgC,UAAU,YAAYV,KAAK,KAAxC,SACJ,4BAAI,uBAAGtB,GAAG,QAAQgC,UAAU,YAAYV,KAAK,SAAzC,kBAYtCK,EAAS,CACXM,eAAgB,CACdhB,SAAU,QACVQ,MAAO,OACPC,OAAQ,OACRK,MAAO,OACPG,IAAK,QAEPC,aAAc,CACZC,WAAY,WAEdC,kBAAmB,CACjBD,WAAY,WAEdE,cAAe,CACbZ,OAAQ,OACRD,MAAO,QAETc,QAAS,CACPH,WAAY,SAEdI,WAAY,CACVvB,SAAU,QAEVmB,WAAY,WAEdK,OAAQ,CAINhB,MAAQ,OACRC,OAAS,QAEXgB,aAAc,CACZC,KAAM,WASRC,UAAW,CAGT3B,SAAW,QAEb4B,OAAQ,CACJnB,OAAQ,SC9ED,SAASoB,EAAKhC,GACzB,OACI,8BACI,6BAASkB,UAAU,WACdlB,EAAMiC,WCFR,eAACjC,GACZ,IAAMkC,GAA8B,IAAflC,EAAME,KACrBiC,EACF,yBAAKjB,UAAU,sBACX,kBAACkB,EAAD,CAAQlC,KAAMgC,IACd,6BACKlC,EAAMiC,WAIbI,EACF,yBAAKnB,UAAU,YAAYhC,GAAG,mBAC1B,kBAACkD,EAAD,MACA,kBAACJ,EAAD,KACKhC,EAAMiC,WAKnB,OAAOC,EAAeC,EAAmBE,G,iBCpB9B,SAASC,EAAKtC,GACzB,OACI,yBAAKkB,UAAU,QACVlB,EAAMiC,UCSJM,MAXf,SAAevC,GACX,IAAMwC,OAA0BC,GAAfzC,EAAM0C,MAAN,UAA8B/C,GAA9B,OAAwCK,EAAM0C,MAAMC,KAAQ,oDAC7E,OACI,yBAAKzB,UAAU,cACX,4BAAQA,UAAU,iBACd,yBAAKT,IAAK+B,EAAU9B,IAAK,aCG1BsB,MATf,SAAchC,GACV,OACI,yBAAKkB,UAAU,WACVlB,EAAMiC,SACP,+BCMGW,MAVf,SAAgB5C,GACZ,OACI,yBAAKkB,UAAU,SACX,+BACI,yBAAK2B,SAAS,YAAY7C,EAAMiC,aCwBjCa,MAtBf,SAAsB9C,GAClB,OACIA,EAAM9B,KAAKa,KAAI,SAACb,EAAMgB,GAClB,IAAMyD,EAAG,wBAAoBzE,EAAKgB,IAClC,OACI,kBAAC,IAAD,CAAM6D,GAAIJ,EAAKzB,UAAU,cAAc8B,IAAK9E,EAAKgB,IAC7C,kBAACoD,EAAD,KACI,kBAAC,EAAD,CAAOI,MAAOxE,EAAKwE,QACnB,yBAAKxB,UAAU,gBACX,kBAAC,EAAD,KACKhD,EAAK+E,OAEV,kBAAC,EAAD,KACKC,IAAOhF,EAAKiF,YAAYC,OAAO,wBCiEhE,IAgBeC,eAhBS,SAAC/E,GACrB,MAAO,CACHgF,SAAWhF,MAIQ,SAAAiF,GACvB,MAAO,CACHC,iBAAmB,kBAAMD,EC5E7B,uCAAO,WAAOA,GAAP,eAAAE,EAAA,sEACa5D,EAAM6D,IAClB,YAFD,OACCC,EADD,OAIHlF,QAAQC,IAAIiF,GACZJ,EAbG,CACH/E,KZXuB,kBYYvBN,KAWqByF,EAAIzF,OALtB,2CAAP,mDAAM,KD6EF0F,iBAAmB,kBAAML,EEjF7B,uCAAO,WAAMA,GAAN,eAAAE,EAAA,sEACe5D,EAAM6D,IACpB,cAFD,OACGC,EADH,OAIHlF,QAAQC,IAAIiF,GACZJ,EAZG,CACH/E,KbD6B,wBaE7BN,KAUuByF,EAAIzF,OALxB,2CAAP,mDAAM,KFkFF2F,2BAA6B,SAACC,GAAD,OAAgBP,EClCN,SAACO,GAC5C,8CAAO,WAAOP,GAAP,eAAAE,EAAA,sEACa5D,EAAM6D,IAAN,iCACcI,IAF3B,OACCH,EADD,OAIHJ,EAXG,CACH/E,KZrD+B,0BYsD/BN,KAS8ByF,EAAIzF,OAJ/B,2CAAP,mDAAM,GDiCoD6F,CAAgCD,KACtFE,eAAiB,kBAAMT,ECrEpB,CACH/E,KZ5BuB,qBWiGvByF,iBAAmB,kBAAMV,EE1EtB,CACH/E,KbjByB,0BW8FlB6E,EAnFf,SAAcrD,GAAO,IAAD,EACgBkE,mBAAS,GADzB,mBACTpF,EADS,KACCqF,EADD,KAEVC,EAAW,uCAAG,sBAAAX,EAAA,sEACVzD,EAAMwD,mBADI,2CAAH,qDAGXa,EAAa,uCAAG,sBAAAZ,EAAA,sEACZzD,EAAM4D,mBADM,2CAAH,qDAGnBU,qBAAW,WACPtE,EAAMgE,iBACNhE,EAAMiE,mBACNG,IACAC,MACD,IACHC,qBAAW,cAER,CAACtE,IAEJ,IAAMuE,EAAoB,SAACrF,GACvBiF,EAAYjF,GACZc,EAAMgE,iBACI,IAAP9E,EACCc,EAAM6D,2BAA2B3E,GAEjCkF,KAIR,OACI,kBAACI,EAAD,CAAQtE,MAAM,GACV,yBAAKgB,UAAU,aACX,yBAAKA,UAAU,aACX,uBAAGb,MAAM,aAAaD,MAAO,CAACqE,UAAW,WACrC,kBAAC,IAAD,CACIvD,UAAW,IAAMpC,EAAU,YAAc,GACzCkE,IAAK,EACL0B,QAAS,WACLH,EAAkB,KAJ1B,gBAUIvE,EAAMsD,SAASxE,SAASC,KAAI,SAACb,EAAMc,GAC/B,OACI,kBAAC,IAAD,CACIkC,UAAWhD,EAAKgB,KAAOJ,EAAU,YAAc,GAC/CkE,IAAK9E,EAAKgB,GACVwF,QAAS,WACLH,EAAkBrG,EAAKgB,MAGtBhB,EAAKiB,WAOlC,yBAAK+B,UAAU,wBACX,kBAAC,EAAD,CAAchD,KAAM8B,EAAMsD,SAASjF,KAAKH,aGvD7CyG,ICpBA,GAAC,CACZC,KAAO,IACPC,OAAO,EACPC,UDFJ,SAAoB9E,GAChB,OACI,kBAACwE,EAAD,CAAQtE,MAAM,GACV,6BAASgB,UAAU,iCACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACf,wBAAIA,UAAU,SAAd,gBAGA,wBAAIA,UAAU,YAAd,2BCNjB,CACC0D,KAAO,oBACPC,OAAO,EACPC,UCwEWzB,aAbS,SAAC/E,GACrB,MAAO,CACHO,QAAUP,MAIS,SAACiF,GACxB,MAAO,CACHwB,gBAAkB,SAAC7F,GAAD,OAAQqE,EJtCO,SAACrE,GACtC,8CAAO,WAAOqE,GAAP,eAAAE,EAAA,sEACa5D,EAAM6D,IAAN,mBACAxE,IAFb,OACCyE,EADD,OAIHJ,EAXG,CACH/E,KZjCyB,oBYkCzBN,KASwByF,EAAIzF,OAJzB,2CAAP,mDAAM,GIqCiC8G,CAA0B9F,KAC7D+F,cAAgB,kBAAM1B,EJ7BnB,CACH/E,KZhD4B,6BgBgFrB6E,EApEf,SAAiBrD,GAAO,IACfd,EAAMgG,cAANhG,GADc,EAEWgF,mBAAS,IAFpB,mBAEd1B,EAFc,KAEJ2C,EAFI,KAGbC,EAAU,uCAAG,sBAAA3B,EAAA,sEACTzD,EAAM+E,gBAAgB7F,GADb,2CAAH,qDAchB,OAXAoF,qBAAU,WACNtE,EAAMiF,gBACNG,MACD,IAEHd,qBAAU,WACHtE,EAAMnB,QAAQA,QAAQ6D,OACrByC,EAAY,GAAD,OAAIxF,GAAJ,OAAcK,EAAMnB,QAAQA,QAAQ6D,MAAMC,SAKzD,kBAAC6B,EAAD,KACI,6BAAStD,UAAU,QACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAclB,EAAMnB,QAAQA,QAAQoE,OAClD,yBAAK/B,UAAU,WAAWd,MAAO,CAACiF,SAAU,SACxC,2BAAInC,IAAOlD,EAAMnB,QAAQA,QAAQsE,YAAYC,OAAO,yBAKpE,6BAASlC,UAAU,QACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aAEM,KAAbsB,EACA,GACA,4BAAQtB,UAAU,iBACd,yBAAKT,IAAK+B,EAAU5B,OAAQ,IAAKF,IAAK,cAM1D,iCACI,yBAAKQ,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,2BAAIlB,EAAMnB,QAAQA,QAAQyG,kBDjDnD,CACCV,KAAO,QACPC,OAAQ,EACRC,UAAYS,IEbD,SAASC,EAASxF,GAC7B,OACI,oCC4BOyF,MAnBf,WACE,OACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEIC,EAAO5G,KAAI,SAAAb,GACT,OACE,kBAAC,IAAD,CAAO0G,KAAM1G,EAAK0G,KAAMC,MAAO3G,EAAK2G,MAAOC,UAAW5G,EAAK4G,eAIjE,kBAAC,IAAD,CAAOF,KAAK,IAAIC,OAAO,EAAMC,UAAWU,QCb9BI,QACW,cAA7BnG,OAAOoG,SAASC,UAEe,UAA7BrG,OAAOoG,SAASC,UAEhBrG,OAAOoG,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b8ed8f19.chunk.js","sourcesContent":["import {\n    FETCH_BLOG_DATA,\n    REMOVE_ARTICLES,\n    GET_ARTICLE_BY_CATEGORY\n} from '../actions/types';\nconst initState = {\n    isFetch : false,\n    data : []\n};\n\nexport default (state = initState, action) => {\n    let isFetch = false;\n    switch (action.type) {\n        case FETCH_BLOG_DATA:\n            console.log(action.data);\n            isFetch = state.data.length > 0 ? true : false;\n            return {\n                isFetch,\n                data : state.data.concat(action.data)\n            }\n        case REMOVE_ARTICLES:\n            return initState\n        case GET_ARTICLE_BY_CATEGORY:\n            isFetch = state.data.length > 0 ? true : false;\n            return {\n                isFetch,\n                data : state.data.concat(action.data),\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_ARTICLE_BY_ID,\n    REMOVE_ARTICLE_STATE,\n} from '../actions/types';\nconst initState = {\n};\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case GET_ARTICLE_BY_ID:\n            return {...action.data};\n        case REMOVE_ARTICLE_STATE :\n            return initState;\n        default:\n            return state;\n    }\n}","import {\n    FETCH_CATEGORIES_DATA,\n    REMOVE_CATEGORIES\n} from '../actions/types';\n\nconst initState = [];\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case FETCH_CATEGORIES_DATA:\n            const category = [];\n            action.data.map( (data, index) => {\n                category.push({\n                    id : data.id,\n                    name : data.name\n                })\n            })\n            return category;\n        case REMOVE_CATEGORIES:\n            return initState;\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport blogReducer from '../reducers/blog';\nimport articleReducer from '../reducers/article';\nimport categoryReducer from '../reducers/category';\n\nconst combinedReducers = combineReducers({\n    blog : blogReducer,\n    article : articleReducer,\n    category : categoryReducer,\n});\n\nconst stores = createStore(\n    combinedReducers, \n    compose(\n        applyMiddleware(thunk),\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\n    )\n);\n\nexport default stores;","export const FETCH_BLOG_DATA = 'FETCH_BLOG_DATA';\nexport const REMOVE_ARTICLES = 'REMOVE_ARTICLES';\nexport const GET_ARTICLE_BY_ID = 'GET_ARTICLE_BY_ID';\nexport const REMOVE_ARTICLE_STATE = 'REMOVE_ARTICLE_STATE';\nexport const GET_ARTICLE_BY_CATEGORY = 'GET_ARTICLE_BY_CATEGORY';\n\n\nexport const FETCH_CATEGORIES_DATA = 'FETCH_CATEGORIES_DATA';\nexport const REMOVE_CATEGORIES = 'REMOVE_CATEGORIES';","export const baseUrl = 'https://blog-backend-260901.appspot.com/';","import {baseUrl} from './environment';\nimport axios from 'axios';\n\nconst instance = axios.create({\n    baseURL : baseUrl\n});\n\nexport default instance;","import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nexport default (props) => {\n    const isFullPage = props.full === true ? {position: 'absolute'} : {}\n    return (\n        <div style={isFullPage}>\n            <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div class=\"navbar-brand\">\n                    <a class=\"navbar-item\" href=\"/\">\n                        <img src=\"/logo.png\" alt=\"made by love\" width=\"40\" height=\"50\"/>\n                    </a>\n\n                    <span>\n                        <Menu styles={styles} pageWrapId={\"page-wrap\"} outerContainerId={ \"outer-container\" } noOverlay right>\n                            <section id=\"page-wrap\" className=\"section\">\n                                <div className=\"menu\">\n                                    <ul className=\"menu-list\">\n                                        <li><a id=\"home\" className=\"menu-list\" href=\"/\">Home</a></li>\n                                        <li><a id=\"about\" className=\"menu-list\" href=\"/blog\">Blog</a></li>\n                                    </ul>\n                                </div>\n                            </section>\n                        </Menu>\n                    </span>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nconst styles = {\n    bmBurgerButton: {\n      position: 'fixed',\n      width: '36px',\n      height: '30px',\n      right: '36px',\n      top: '10px'\n    },\n    bmBurgerBars: {\n      background: '#373a47'\n    },\n    bmBurgerBarsHover: {\n      background: '#a90000'\n    },\n    bmCrossButton: {\n      height: '24px',\n      width: '24px'\n    },\n    bmCross: {\n      background: 'black'\n    },\n    bmMenuWrap: {\n      position: 'fixed',\n    //   height: '100%',\n      background: '#f0f0f2'\n    },\n    bmMenu: {\n    //   background: '#f0f0f2',\n    //   padding: '2.5em 1.5em 0',\n    //   fontSize: '1.15em',\n      width : '100%',\n      height : '100%'\n    },\n    bmMorphShape: {\n      fill: '#f0f0f2'\n    },\n    // bmItemList: {\n    //   color: '#b8b7ad',\n    //   padding: '0.8em'\n    // },\n    // bmItem: {\n    //   display: 'inline-block'\n    // },\n    bmOverlay: {\n    //   background: 'rgba(0, 0, 0, 0.3)',\n    //   width : '100%',\n      position : 'auto'\n    },\n    bmItem: {\n        height: '100%'\n    }\n  }","import React from 'react';\nexport default function Body(props){\n    return (\n        <body>\n            <section className=\"section\">\n                {props.children}\n            </section>\n        </body>\n    );\n}","import React from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport Body from '../Body/Body';\nexport default (props) => {\n    const isFullScreen = props.full === true ? true : false;\n    const fullScreenLayout = (\n        <div className=\"hero is-fullheight\">\n            <Navbar full={isFullScreen}/>\n            <div>\n                {props.children}\n            </div>\n        </div>    \n    );\n    const notFullScreen = (\n        <div className=\"container\" id=\"outer-container\">\n            <Navbar/>\n            <Body>\n                {props.children}\n            </Body>\n        </div>\n    )\n    \n    return isFullScreen ? fullScreenLayout : notFullScreen;\n}","import React from 'react';\n\nexport default function Card(props){\n    return(\n        <div className=\"card\">\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport { baseUrl } from '../../../config/environment';\n\nfunction Cover(props){\n    const coverUrl = props.cover != undefined ? `${baseUrl}${props.cover.url}` : \"https://bulma.io/images/placeholders/1280x960.png\";\n    return (\n        <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n                <img src={coverUrl} alt={\"Cover\"}/>\n            </figure>\n        </div>\n    )\n}\n\nexport default Cover;","import React from 'react';\n\nfunction Body(props){\n    return (\n        <div className=\"content\">\n            {props.children}\n            <br/>\n        </div>\n    );\n}\n\nexport default Body;","import React from 'react';\n\nfunction Footer(props){\n    return (\n        <div className=\"media\">\n            <small>\n                <div datetime=\"2016-1-1\">{props.children}</div>\n            </small>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom';\n\nimport Card from '../../molecules/Card/Card';\nimport Cover from '../../molecules/Card/Cover';\nimport Body from '../../molecules/Card/Body';\nimport Footer from '../../molecules/Card/Footer';\nfunction ArticlesCard(props){\n    return (\n        props.data.map((data, id) => {\n            const url = `/blog/article/${data.id}`;\n            return (\n                <Link to={url} className=\"column is-3\" key={data.id}>\n                    <Card>\n                        <Cover cover={data.cover}/>\n                        <div className=\"card-content\">\n                            <Body>\n                                {data.title}\n                            </Body>\n                            <Footer>\n                                {moment(data.created_at).format('D MMMM Y H:m')}\n                            </Footer>\n                        </div>\n                    </Card>\n                </Link>\n            )\n        })\n    );\n}\nexport default ArticlesCard;","import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Link\n} from 'react-router-dom';\nimport {\n    getArticlesFromNetwork,\n    removeArticles,\n    getArticleByCategoryFromNetwork,\n} from '../actions/getArticles';\n\nimport {\n    getCategoriesFromNetwork,\n    removeCategories\n} from '../actions/getCategories';\n\nimport Layout from '../components/organisms/Layout';\nimport ArticlesCard from '../components/organisms/Card/ArticlesCard';\n\nfunction Home(props){\n    const [category, setCategory] = useState(0);\n    const getArticles = async () => {\n        await props.dispatchArticles();\n    }\n    const getCategories = async () => {\n        await props.dispatchCategory();\n    }\n    useEffect( () => {\n        props.removeArticles();\n        props.removeCategories();\n        getArticles();\n        getCategories();\n    }, []);\n    useEffect( () => {\n        // getCategories();;\n    }, [props])\n\n    const setActiveCategory = (id) => {\n        setCategory(id);\n        props.removeArticles();\n        if(id !== 0){\n            props.dispatchArticlesByCategory(id);\n        } else {\n            getArticles();\n        }\n    }\n\n    return (\n        <Layout full={false}>\n            <div className=\"container\">\n                <div className=\"container\">\n                    <p class=\"panel-tabs\" style={{overflowY: 'scroll'}}>\n                        <Link \n                            className={0 === category? \"is-active\" : \"\"}  \n                            key={0}\n                            onClick={() => {\n                                setActiveCategory(0)\n                            }}\n                            >\n                                All Category\n                        </Link>\n                        {\n                            props.articles.category.map((data, index) => {\n                                return (\n                                    <Link \n                                        className={data.id === category? \"is-active\" : \"\"}  \n                                        key={data.id}\n                                        onClick={() => {\n                                            setActiveCategory(data.id)\n                                        }}\n                                        >\n                                            {data.name}\n                                    </Link>\n                                )\n                            })\n                        }\n                    </p>\n                </div>\n                <div className=\"columns is-multiline\">\n                    <ArticlesCard data={props.articles.blog.data}/>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nconst mapPropsToState = (state) => {\n    return {\n        articles : state\n    }\n}\n\nconst mapDispatchToState = dispatch => {\n    return {\n        dispatchArticles : () => dispatch(getArticlesFromNetwork()),\n        dispatchCategory : () => dispatch(getCategoriesFromNetwork()),\n        dispatchArticlesByCategory : (categoryId) => dispatch(getArticleByCategoryFromNetwork(categoryId)),\n        removeArticles : () => dispatch(removeArticles()),\n        removeCategories : () => dispatch(removeCategories()),\n    };\n}\n\nexport default connect(mapPropsToState, mapDispatchToState)(Home);","import {\n    FETCH_BLOG_DATA,\n    GET_ARTICLE_BY_ID,\n    REMOVE_ARTICLE_STATE,\n    REMOVE_ARTICLES,\n    GET_ARTICLE_BY_CATEGORY\n} from './types';\nimport axios from '../config/blogApi';\n\nconst getArticles = (data) => {\n    return {\n        type : FETCH_BLOG_DATA,\n        data : data\n    }\n}\n\n\nexport const getArticlesFromNetwork = () => {\n    return async (dispatch) => {\n        let res = await axios.get(\n            'contents'\n        );\n        console.log(res);\n        dispatch(getArticles(res.data));\n    }\n}\n\nexport const removeArticles = () => {\n    return {\n        type : REMOVE_ARTICLES\n    }\n}\n\nconst getArticleById = (data) => {\n    return {\n        type : GET_ARTICLE_BY_ID,\n        data : data\n    }\n}\n\nexport const getArticleByIdFromNetWork = (id) => {\n    return async (dispatch) => {\n        let res = await axios.get(\n            `contents/${id}`\n        );\n        dispatch(getArticleById(res.data));\n    }\n}\n\nexport const removeArticle = () => {\n    return {\n        type : REMOVE_ARTICLE_STATE\n    }\n}\n\nconst getArticleByCategory = (data) => {\n    return {\n        type : GET_ARTICLE_BY_CATEGORY,\n        data : data\n    }\n}\n\nexport const getArticleByCategoryFromNetwork = (categoryId) => {\n    return async (dispatch) => {\n        let res = await axios.get(\n            `contents?categories.id=${categoryId}`\n        );\n        dispatch(getArticleByCategory(res.data));\n    }\n}","import {\n    FETCH_CATEGORIES_DATA, REMOVE_CATEGORIES\n} from './types';\n\nimport axios from '../config/blogApi';\n\nconst getCategories = (data) => {\n    return {\n        type : FETCH_CATEGORIES_DATA,\n        data : data\n    }\n}\n\nexport const getCategoriesFromNetwork = () => {\n    return async dispatch => {\n        const res = await axios.get(\n            'categories'\n        );\n        console.log(res)\n        dispatch(getCategories(res.data));\n    }\n}\n\nexport const removeCategories = () => {\n    return {\n        type : REMOVE_CATEGORIES\n    }\n}","import React from 'react';\n\nimport Layout from '../components/organisms/Layout';\n\n\nfunction Portofolio(props){\n    return(\n        <Layout full={true}>\n            <section className=\"hero is-success is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                    <h1 className=\"title\">\n                        Ari Nurcahya\n                    </h1>\n                    <h2 className=\"subtitle\">\n                        Software Engineer\n                    </h2>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    );\n}\n\nexport default Portofolio;","import Home from '../views/Home';\nimport Article from '../views/Article';\nimport Portofolio from '../views/Portofolio';\n\nexport default [{\n    path : '/',\n    exact: true,\n    component : Portofolio\n}, {\n    path : '/blog/article/:id',\n    exact: true,\n    component : Article\n}, {\n    path : '/blog',\n    exact : true,\n    component : Home\n}];","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useParams} from 'react-router-dom';\n\nimport {baseUrl} from '../config/environment';\n\nimport Cover from '../components/molecules/Card/Cover';\nimport Layout from '../components/organisms/Layout';\n\nimport {\n    getArticleByIdFromNetWork,\n    removeArticle\n} from '../actions/getArticles';\nimport moment from 'moment';\n\nfunction Article(props){\n    let {id} = useParams();\n    let [coverUrl, setCoverUrl] = useState('');\n    const getArticle = async () => {\n        await props.dispatchArticle(id);\n    }\n    useEffect(() => {\n        props.removeArticle();\n        getArticle();\n    }, []);\n\n    useEffect(() => {\n        if(props.article.article.cover){\n            setCoverUrl(`${baseUrl}${props.article.article.cover.url}`);\n        }\n    })\n\n    return (\n        <Layout>\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title is-1\">{props.article.article.title}</h1>\n                        <div className=\"subtitle\" style={{fontSize: '10pt'}}>\n                            <p>{moment(props.article.article.created_at).format(\"MMMM D YYYY H:mm\")}</p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        {\n                            coverUrl === '' ? \n                            '' : \n                            <figure className=\"image is-4by3\">\n                                <img src={coverUrl} height={256} alt={\"Cover\"}/>\n                            </figure>\n                        }\n                    </div>\n                </div>\n            </section>\n            <section>\n                <div className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <p>{props.article.article.content}</p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    );\n};\n\nconst mapPropsToState = (state) => {\n    return {\n        article : state\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        dispatchArticle : (id) => dispatch(getArticleByIdFromNetWork(id)),\n        removeArticle : () => dispatch(removeArticle())\n    }\n}\n\nexport default connect(mapPropsToState, mapDispatchToState)(Article);","import React from 'react';\n\nexport default function NotFound(props){\n    return (\n        <div>\n            404\n        </div>\n    );\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\n\nimport store from './stores';\nimport routes from './config/router';\nimport NotFound from './views/error/404';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          {\n            routes.map(data => {\n              return (\n                <Route path={data.path} exact={data.exact} component={data.component}/>\n              )\n            })\n          }\n          <Route path=\"*\" exact={true} component={NotFound}/>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}